// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("PROD_DB_URL_POOLED")
  directUrl = env("PROD_DB_URL")
}

// Location Management

model Location {
  id           String         @id @default(cuid())
  name         String
  status       LocationStatus
  address      String?
  description  String?
  created_at   DateTime       @default(now())
  subLocations SubLocations[]
  User         User[]
}

model SubLocations {
  id               String   @id @default(cuid())
  name             String
  description      String?
  parentLocation   Location @relation(fields: [parentLocationID], references: [id])
  parentLocationID String
}

enum LocationStatus {
  Available
  Closed
}

// User Management

model UserGroup {
  id          String                @id @default(cuid())
  name        String                @unique
  description String                @default("")
  permissions UserGroupPermission[] @default([])
  User        User[]
}

enum UserGroupPermission {
  FullAccess
  Dashboad_Access
  AssetManagement_Access
  AssetManagement_AddAsset
  AssetManagement_EditAsset
  AssetManagement_ChangeStatus
  AssetManagement_HandoverAsset
  AssetManagement_DownloadData
  AssetManagement_DeleteAsset
}

model User {
  id                   String    @id @default(cuid())
  firstName            String
  lastName             String
  position             String?
  employeeId           String?
  phoneNumber          String?
  email                String    @unique
  password             String
  userGroup            UserGroup @relation(fields: [userGroupId], references: [id])
  userGroupId          String
  location             Location? @relation(fields: [locationId], references: [id])
  locationId           String?
  AssignedVehicles     Vehicle[] @relation("assignedTo")
  BPKBAssignedVehicles Vehicle[] @relation("bpkbAssignedTo")
  KIRAssignedVehicles  Vehicle[] @relation("kirAssignedTo")
}

// Asset Management todo

model Vehicle {
  id                    String        @id @default(cuid())
  // Table
  plateNo               String
  vehicleName           String
  brandName             String
  model                 String
  bodyType              String
  prodYear              Int
  numberOfTyres         Int
  attachedWith          Vehicle?      @relation("attachment", fields: [attachedWithVehicleId], references: [id])
  attachedFrom          Vehicle?      @relation("attachment")
  attachedWithVehicleId String?       @unique
  assignedTo            User          @relation("assignedTo", fields: [assignedToUserId], references: [id])
  assignedToUserId      String
  createdAt             DateTime      @default(now())
  status                VehicleStatus
  // Detail
  engineModel           String
  transmissionModel     String
  costPrice             String
  stnkNumber            String
  stnkExpiryDate        DateTime
  engineNumber          String
  chasisNumber          String
  bpkbNumber            String
  bpkbAssignedTo        User          @relation("bpkbAssignedTo", fields: [bpkbAssignedToUserId], references: [id])
  bpkbAssignedToUserId  String
  kir                   String
  kirExpiryDate         String
  kirAssignedTo         User          @relation("kirAssignedTo", fields: [kirAssignedToUserId], references: [id])
  kirAssignedToUserId   String
}

enum VehicleStatus {
  Active
  Inactive
  Archive
}

// Work Order (WIP)

model WorkOrder {
  id           String            @id @default(cuid())
  scheduleDate DateTime
  priority     WorkOrderPriority @default(Medium)
  status       WorkOrderStatus   @default(Open)
}

enum WorkOrderStatus {
  Open
  Assigned
  In_Progress
  On_Hold
  Resolved
  Closed
  Canceled
}

enum WorkOrderPriority {
  Low
  Medium
  High
}

// ASSET CONFIGURATION

model VehicleAssetConfiguration {
  id                String  @id @default(cuid())
  type              String
  brand             String
  model             String
  engineModel       String
  transmissionModel String
  isActive          Boolean @default(false)
}

model VehicleBodyTypeAssetConfiguration {
  id       String  @id @default(cuid())
  name     String
  isActive Boolean @default(false)
}

model TyreConfiguration {
  id                  String @id @default(cuid())
  brand               String // drop down
  pattern             String // drop down
  sectionWidth        Int
  tubeType            String
  speedSymbol         String
  construction        String
  plyRating           Int
  traCode             String
  rimDiameter         Int
  loadIndex           String
  starRating          Int
  originalThreadDepth Int
}
